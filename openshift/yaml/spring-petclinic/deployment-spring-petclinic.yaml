apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "7"
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"spring-petclinic:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"spring-petclinic\")].image"}]'
    openshift.io/generated-by: OpenShiftNewApp
  labels:
    app: spring-petclinic
    app.kubernetes.io/component: spring-petclinic
    app.kubernetes.io/instance: spring-petclinic
  name: spring-petclinic
spec:
  progressDeadlineSeconds: 600
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      deployment: spring-petclinic
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/restartedAt: "2021-04-22T20:17:26+08:00"
        openshift.io/generated-by: OpenShiftNewApp
      creationTimestamp: null
      labels:
        deployment: spring-petclinic
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: mysql
        - name: MYSQL_URL
          value: jdbc:mysql://mysql:3306/petclinic
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              key: database-user
              name: mysql
        - name: MYSQL_PASS
          valueFrom:
            secretKeyRef:
              key: database-password
              name: mysql
        image: image-registry.openshift-image-registry.svc:5000/c5dpn-petclinic/spring-petclinic@sha256:dae6367245d82e0f18d072ebf0358bb25edc205e375b81b9a6058d67be018c90
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /actuator/health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 100
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 1
        name: spring-petclinic
        ports:
        - containerPort: 8443
          protocol: TCP
        - containerPort: 8778
          protocol: TCP
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /actuator/health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 40
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

